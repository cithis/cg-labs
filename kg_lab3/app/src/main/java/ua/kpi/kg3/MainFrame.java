/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ua.kpi.kg3;

import java.awt.*;
import java.lang.Thread.State;
import ua.kpi.kg3.Algos.BoundaryFloodFill;
import ua.kpi.kg3.Algos.FloodFill;
import ua.kpi.kg3.Algos.SpanFill;
import ua.kpi.kg3.Runners.ImageFillRunner;
import ua.kpi.kg3.Runners.ScanlineFillRunner;

/**
 *
 * @author Jill
 */
public class MainFrame extends javax.swing.JFrame {
    private ImageFillRunner imageRunner;
    private ScanlineFillRunner polygonRunner;
    private Thread imageProcess = null, polygonProcess = null;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        imageRunner   = new ImageFillRunner();
        polygonRunner = new ScanlineFillRunner();

        initComponents();
        initImageRunner();
        initPolygonRunner();
        imageRunner.prepareCanvas();
        polygonRunner.prepareCanvas();
    }

    private void initImageRunner() {
        imageRunner.setContainer(jImageFakeCanvas);
        imageRunner.setHelpLabel(jImageHelpText);
        imageRunner.setTimeLabel(jImageTimeCount);
        imageRunner.setStatusLabel(jImageStatus);
        imageRunner.setOpCountLabel(jImageOpCount);
        imageRunner.setBorderColor(null);
        imageRunner.setStartingPixel(0, 0);

        jImageTargetColorPickerKeyTyped(null);
        jImageSpeedPickerPropertyChange(null);
        jImageFlushPickerPropertyChange(null);
        jImageAlgoPickerPropertyChange(null);
    }

    private void initPolygonRunner() {
        polygonRunner.setContainer(jPolygonFakeCanvas);
        polygonRunner.setHelpLabel(jPolygonHelpText);
        polygonRunner.setTimeLabel(jPolygonTimeCount);
        polygonRunner.setStatusLabel(jPolygonStatus);
        polygonRunner.setOpCountLabel(jPolygonOpCount);
        polygonRunner.setFillColor(Color.ORANGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabs = new javax.swing.JTabbedPane();
        jImageFillsPane = new javax.swing.JDesktopPane();
        jImageFrame = new javax.swing.JInternalFrame();
        jImageFakeCanvas = new javax.swing.JLabel();
        jPolygonFakeCanvas = new javax.swing.JLabel();
        jControlFrame = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPickImageButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jImageAlgoPicker = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jImageTargetColorPicker = new javax.swing.JTextField();
        jImageBorderColorPicker = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jImageSpeedPicker = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jImageFlushPicker = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jImageStatus = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jImageOpCount = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jImageTimeCount = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jImageHelpText = new javax.swing.JLabel();
        jImageGoButton = new javax.swing.JButton();
        jPolyFillsPane = new javax.swing.JDesktopPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jInternalFrame2 = new javax.swing.JInternalFrame();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jPolygonColorPicker = new javax.swing.JTextField();
        jPolygonVertexRemoveButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jPolygonSpeedPicker = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jPolygonFlushPicker = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jPolygonStatus = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPolygonOpCount = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPolygonTimeCount = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPolygonHelpText = new javax.swing.JLabel();
        jPolygonGoButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lab Work 3");
        setResizable(false);

        jImageFrame.setTitle("Свiтлина");
        jImageFrame.setVisible(true);

        jImageFakeCanvas.setFont(new java.awt.Font("fs Tahoma 8px", 1, 48)); // NOI18N
        jImageFakeCanvas.setForeground(new java.awt.Color(255, 0, 0));
        jImageFakeCanvas.setText("ERROR");
        jImageFakeCanvas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jImageFakeCanvasMousePressed(evt);
            }
        });

        jPolygonFakeCanvas.setFont(new java.awt.Font("fs Tahoma 8px", 1, 48)); // NOI18N
        jPolygonFakeCanvas.setForeground(new java.awt.Color(255, 0, 0));
        jPolygonFakeCanvas.setText("ERROR");
        jPolygonFakeCanvas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPolygonFakeCanvasMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jImageFrameLayout = new javax.swing.GroupLayout(jImageFrame.getContentPane());
        jImageFrame.getContentPane().setLayout(jImageFrameLayout);
        jImageFrameLayout.setHorizontalGroup(
                jImageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jImageFrameLayout.createSequentialGroup()
                                .addComponent(jImageFakeCanvas)
                                .addGap(0, 388, Short.MAX_VALUE))
        );
        jImageFrameLayout.setVerticalGroup(
                jImageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jImageFrameLayout.createSequentialGroup()
                                .addComponent(jImageFakeCanvas)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        jControlFrame.setTitle("Керування");
        jControlFrame.setToolTipText("");
        jControlFrame.setVisible(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Налаштування", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel1.setToolTipText("");
        jPanel1.setName(""); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Свiтлина");

        jPickImageButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPickImageButton.setText("Обрати...");
        jPickImageButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPickImageButtonMouseClicked(evt);
            }
        });
        jPickImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPickImageButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Алгоритм");

        jImageAlgoPicker.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jImageAlgoPicker.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Flood Fill", "Boundary Fill", "Span Fill" }));
        jImageAlgoPicker.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jImageAlgoPickerPropertyChange(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Колiр заливки");

        jImageTargetColorPicker.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jImageTargetColorPicker.setText("#ffffff");
        jImageTargetColorPicker.setToolTipText("");
        jImageTargetColorPicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jImageTargetColorPickerActionPerformed(evt);
            }
        });
        jImageTargetColorPicker.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jImageTargetColorPickerKeyTyped(evt);
            }
        });

        jImageBorderColorPicker.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jImageBorderColorPicker.setText("#000000");
        jImageBorderColorPicker.setEnabled(false);
        jImageBorderColorPicker.setPreferredSize(new java.awt.Dimension(50, 22));
        jImageBorderColorPicker.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jImageBorderColorPickerKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Колiр границi");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jImageAlgoPicker, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jPickImageButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addContainerGap())
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel3)
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jImageBorderColorPicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jImageTargetColorPicker))
                                                .addGap(12, 12, 12))))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jPickImageButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(jImageAlgoPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jImageTargetColorPicker)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jImageBorderColorPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4))
                                .addGap(0, 8, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Швидкодiя", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Операцiй/с");

        jImageSpeedPicker.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jImageSpeedPicker.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "60 оп/с", "120 оп/с", "240 оп/с (i8086)", "480 оп/с", "750 оп/с (i286 @ 8MHz)", "1510 оп/с (i286 @ 12MHz)", "4595 оп/с (i386 @ 25MHz)", "∞ оп/с" }));
        jImageSpeedPicker.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jImageSpeedPickerPropertyChange(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Скидання");

        jImageFlushPicker.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jImageFlushPicker.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "раз на секунду", "не оновлювати", "у реальному часi", "кожнi 10 операцiй", "кожнi 100 операцiй", "кожнi 1000 операцiй", "кожнi 10000 операцiй" }));
        jImageFlushPicker.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jImageFlushPickerPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jImageSpeedPicker, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jImageFlushPicker, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(jImageSpeedPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(jImageFlushPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 8, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Статистика", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Стан:");

        jImageStatus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jImageStatus.setText("очiкування");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Операцiй:");

        jImageOpCount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jImageOpCount.setText("0");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Час:");

        jImageTimeCount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jImageTimeCount.setText("0ms");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel11))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jImageTimeCount)
                                        .addComponent(jImageOpCount)
                                        .addComponent(jImageStatus))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(jImageStatus))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(jImageOpCount))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel11)
                                        .addComponent(jImageTimeCount))
                                .addGap(0, 8, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Вказiвки", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jImageHelpText.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jImageHelpText.setForeground(new java.awt.Color(255, 102, 0));
        jImageHelpText.setText("! треба обрати свiтлину");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jImageHelpText, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jImageHelpText, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                .addContainerGap())
        );

        jImageGoButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jImageGoButton.setText("ПУСК");
        jImageGoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jImageGoButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jControlFrameLayout = new javax.swing.GroupLayout(jControlFrame.getContentPane());
        jControlFrame.getContentPane().setLayout(jControlFrameLayout);
        jControlFrameLayout.setHorizontalGroup(
                jControlFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jControlFrameLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jControlFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jControlFrameLayout.createSequentialGroup()
                                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jImageGoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        jControlFrameLayout.setVerticalGroup(
                jControlFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jControlFrameLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jControlFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jImageGoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );

        jImageFillsPane.setLayer(jImageFrame, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jImageFillsPane.setLayer(jControlFrame, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jImageFillsPaneLayout = new javax.swing.GroupLayout(jImageFillsPane);
        jImageFillsPane.setLayout(jImageFillsPaneLayout);
        jImageFillsPaneLayout.setHorizontalGroup(
                jImageFillsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jImageFillsPaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jImageFrame)
                                .addGap(18, 18, 18)
                                .addComponent(jControlFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        jImageFillsPaneLayout.setVerticalGroup(
                jImageFillsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jImageFillsPaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jImageFillsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jControlFrame)
                                        .addComponent(jImageFrame))
                                .addContainerGap())
        );

        jTabs.addTab("Заливка свiтлин", jImageFillsPane);

        jInternalFrame1.setTitle("Многкутник");
        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
                jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(jPolygonFakeCanvas)
                                .addGap(0, 388, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
                jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(jPolygonFakeCanvas)
                                .addGap(0, 0, Short.MAX_VALUE))
        );

        jInternalFrame2.setTitle("Керування");
        jInternalFrame2.setVisible(true);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Налаштування", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel14.setText("Алгоритм");

        jComboBox4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scanline" }));
        jComboBox4.setEnabled(false);

        jLabel15.setText("Колiр заливки");

        jPolygonColorPicker.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPolygonColorPicker.setText("#000000");
        jPolygonColorPicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPolygonColorPickerActionPerformed(evt);
            }
        });
        jPolygonColorPicker.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPolygonColorPickerKeyTyped(evt);
            }
        });

        jPolygonVertexRemoveButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPolygonVertexRemoveButton.setText("Прибрати вершину");
        jPolygonVertexRemoveButton.setEnabled(false);
        jPolygonVertexRemoveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPolygonVertexRemoveButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPolygonVertexRemoveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                                                .addComponent(jLabel15)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addComponent(jLabel14)
                                                                .addGap(35, 35, 35)))
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(jComboBox4, 0, 176, Short.MAX_VALUE)
                                                        .addComponent(jPolygonColorPicker))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel14)
                                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel15)
                                        .addComponent(jPolygonColorPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPolygonVertexRemoveButton)
                                .addGap(0, 8, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Швидкодiя", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("Операцiй/с");

        jPolygonSpeedPicker.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPolygonSpeedPicker.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "60 оп/с", "120 оп/с", "240 оп/с (i8086)", "480 оп/с", "750 оп/с (i286 @ 8MHz)", "4595 оп/с (i386 @ 25MHz)" }));
        jPolygonSpeedPicker.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPolygonSpeedPickerPropertyChange(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Скидання");

        jPolygonFlushPicker.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jPolygonFlushPicker.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "раз на секунду", "не оновлювати", "у реальному часi", "кожнi 10 операцiй", "кожнi 100 операцiй", "кожнi 1000 операцiй", "кожнi 10000 операцiй" }));
        jPolygonFlushPicker.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPolygonFlushPickerPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel16)
                                        .addComponent(jLabel17))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPolygonSpeedPicker, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPolygonFlushPicker, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel16)
                                        .addComponent(jPolygonSpeedPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel17)
                                        .addComponent(jPolygonFlushPicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 8, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Статистика", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setText("Стан:");

        jPolygonStatus.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jPolygonStatus.setText("очiкування");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setText("Операцiй:");

        jPolygonOpCount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jPolygonOpCount.setText("0");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel22.setText("Час:");

        jPolygonTimeCount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jPolygonTimeCount.setText("0ms");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel18)
                                        .addComponent(jLabel20)
                                        .addComponent(jLabel22))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPolygonTimeCount)
                                        .addComponent(jPolygonOpCount)
                                        .addComponent(jPolygonStatus))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel18)
                                        .addComponent(jPolygonStatus))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel20)
                                        .addComponent(jPolygonOpCount))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel22)
                                        .addComponent(jPolygonTimeCount))
                                .addGap(0, 8, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Вказiвки", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jPolygonHelpText.setFont(new java.awt.Font("Tahoma", Font.ITALIC, 12)); // NOI18N
        jPolygonHelpText.setForeground(new java.awt.Color(255, 102, 0));
        jPolygonHelpText.setText("! треба 3 вершини");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
                jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPolygonHelpText, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
                jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jPolygonHelpText, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                .addContainerGap())
        );

        jPolygonGoButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPolygonGoButton.setText("ПУСК");
        jPolygonGoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPolygonGoButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
                jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jInternalFrame2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jInternalFrame2Layout.createSequentialGroup()
                                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jPolygonGoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        jInternalFrame2Layout.setVerticalGroup(
                jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jInternalFrame2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPolygonGoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );

        jPolyFillsPane.setLayer(jInternalFrame1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jPolyFillsPane.setLayer(jInternalFrame2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPolyFillsPaneLayout = new javax.swing.GroupLayout(jPolyFillsPane);
        jPolyFillsPane.setLayout(jPolyFillsPaneLayout);
        jPolyFillsPaneLayout.setHorizontalGroup(
                jPolyFillsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPolyFillsPaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jInternalFrame1, 590, 590, 590)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jInternalFrame2)
                                .addContainerGap())
        );
        jPolyFillsPaneLayout.setVerticalGroup(
                jPolyFillsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPolyFillsPaneLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPolyFillsPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jInternalFrame2)
                                        .addComponent(jInternalFrame1))
                                .addContainerGap())
        );

        jTabs.addTab("Заливка многокутника", jPolyFillsPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabs)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabs, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPickImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPickImageButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPickImageButtonActionPerformed

    private void jImageTargetColorPickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jImageTargetColorPickerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jImageTargetColorPickerActionPerformed

    private void jPolygonColorPickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPolygonColorPickerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPolygonColorPickerActionPerformed

    private void jImageGoButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jImageGoButtonMouseClicked
        if (imageProcess != null && imageProcess.getState() != State.TERMINATED)
            return;

        imageProcess = new Thread(imageRunner);
        imageProcess.start();
    }//GEN-LAST:event_jImageGoButtonMouseClicked

    private void jPickImageButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPickImageButtonMouseClicked
        FileDialog picker = new FileDialog(this, "Оберiть свiтлину");
        picker.setMode(FileDialog.LOAD);
        picker.setVisible(true);
        String file = picker.getDirectory() + picker.getFile();
        picker.dispose();

        System.out.println("[GUI] File is " + file);

        if (!imageRunner.setImage(file))
            jImageHelpText.setText("! свiтлина крива");

        jImageFrame.setTitle("Свiтлина: " + file);
    }//GEN-LAST:event_jPickImageButtonMouseClicked

    private void jImageTargetColorPickerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jImageTargetColorPickerKeyTyped
        // I'm too lazy to add DocumentListener, so i'll use keyTyped this way:
        String color = jImageTargetColorPicker.getText();
        if (evt != null) {
            char chr = evt.getKeyChar();
            if (Character.isLetter(chr))
                color += chr;
        }

        System.out.println("[GUI] Color (A) changing to: " + color);
        if (color.length() != 7 || color.charAt(0) != '#')
            return;

        Color colorObj = Color.decode(color);
        imageRunner.setFillColor(colorObj);
    }//GEN-LAST:event_jImageTargetColorPickerKeyTyped

    private void jPolygonColorPickerKeyTyped(java.awt.event.KeyEvent evt) {
        String color = jPolygonColorPicker.getText();
        if (evt != null) {
            char chr = evt.getKeyChar();
            if (Character.isLetter(chr))
                color += chr;
        }

        System.out.println("[GUI] Color (A) changing to: " + color);
        if (color.length() != 7 || color.charAt(0) != '#')
            return;

        Color colorObj = Color.decode(color);
        polygonRunner.setFillColor(colorObj);
    }

    private void jPolygonSpeedPickerPropertyChange(java.beans.PropertyChangeEvent evt) {
        int ops = 60;
        switch (jPolygonSpeedPicker.getSelectedIndex()) {
            case 1 -> ops = 120;
            case 2 -> ops = 240;
            case 3 -> ops = 480;
            case 4 -> ops = 750;
            case 5 -> ops = 1510;
            case 6 -> ops = 4595;
            case 7 -> ops = -1;
        }

        polygonRunner.setOpsLimit(ops);
    }

    private void jPolygonFlushPickerPropertyChange(java.beans.PropertyChangeEvent evt) {
        int flush = 10;
        switch (jPolygonFlushPicker.getSelectedIndex()) {
            case 0 -> flush = -2;
            case 1 -> flush = -1;
            case 2 -> flush = 0;
            case 4 -> flush = 100;
            case 5 -> flush = 1000;
            case 6 -> flush = 10000;
        }

        polygonRunner.setFlushPeriod(flush);
    }

    private void jPolygonGoButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jImageGoButtonMouseClicked
        if (polygonProcess != null && polygonProcess.getState() != State.TERMINATED)
            return;

        polygonProcess = new Thread(polygonRunner);
        polygonProcess.start();
    }

    private void jPolygonVertexRemoveButtonMouseClicked(java.awt.event.MouseEvent evt) {
        polygonRunner.removeVertex();
        if (!polygonRunner.verticesLeft())
            jPolygonVertexRemoveButton.setEnabled(false);
    }

    private void jPolygonFakeCanvasMousePressed(java.awt.event.MouseEvent evt) {
        System.out.println("[GUI] AddVertexRequest: " + evt.getX() + "," + evt.getY());
        polygonRunner.addVertex(evt.getX(), evt.getY());
        jPolygonVertexRemoveButton.setEnabled(true);
    }

    private void jImageBorderColorPickerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jImageBorderColorPickerKeyTyped
        String color = jImageBorderColorPicker.getText();
        if (evt != null) {
            char chr = evt.getKeyChar();
            if (Character.isLetter(chr))
                color += chr;
        }

        System.out.println("[GUI] Color (B) changing to: " + color);
        if (color.length() != 7 || color.charAt(0) != '#')
            return;

        Color colorObj = Color.decode(color);
        imageRunner.setBorderColor(colorObj);
    }//GEN-LAST:event_jImageBorderColorPickerKeyTyped

    private void jImageSpeedPickerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jImageSpeedPickerPropertyChange
        int ops = 60;
        switch (jImageSpeedPicker.getSelectedIndex()) {
            case 1 -> ops = 120;
            case 2 -> ops = 240;
            case 3 -> ops = 480;
            case 4 -> ops = 750;
            case 5 -> ops = 1510;
            case 6 -> ops = 4595;
            case 7 -> ops = -1;
        }

        imageRunner.setOpsLimit(ops);
    }//GEN-LAST:event_jImageSpeedPickerPropertyChange

    private void jImageFlushPickerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jImageFlushPickerPropertyChange
        int flush = 10;
        switch (jImageFlushPicker.getSelectedIndex()) {
            case 0 -> flush = -2;
            case 1 -> flush = -1;
            case 2 -> flush = 0;
            case 4 -> flush = 100;
            case 5 -> flush = 1000;
            case 6 -> flush = 10000;
        }

        imageRunner.setFlushPeriod(flush);
    }//GEN-LAST:event_jImageFlushPickerPropertyChange

    private void jImageAlgoPickerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jImageAlgoPickerPropertyChange
        try {
            switch (jImageAlgoPicker.getSelectedIndex()) {
                case 0:
                    imageRunner.setFillImplClass(FloodFill.getConstructor());
                    imageRunner.setBorderColor(null);
                    jImageBorderColorPicker.setText("(none)");
                    jImageBorderColorPicker.setEnabled(false);
                    break;
                case 1:
                    imageRunner.setFillImplClass(BoundaryFloodFill.getConstructor());
                    jImageBorderColorPicker.setText("#000000");
                    jImageBorderColorPicker.setEnabled(true);
                    jImageBorderColorPickerKeyTyped(null);
                    break;
                case 2:
                    imageRunner.setFillImplClass(SpanFill.getConstructor());
                    imageRunner.setBorderColor(null);
                    jImageBorderColorPicker.setText("(none)");
                    jImageBorderColorPicker.setEnabled(false);
                    break;
            }
        } catch (NoSuchMethodException|SecurityException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jImageAlgoPickerPropertyChange

    private void jImageFakeCanvasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jImageFakeCanvasMousePressed
        System.out.println("[GUI] " + evt.getX() + "," + evt.getY());
        imageRunner.setStartingPixel(evt.getX(), evt.getY());
    }//GEN-LAST:event_jImageFakeCanvasMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JInternalFrame jControlFrame;
    private javax.swing.JComboBox<String> jImageAlgoPicker;
    private javax.swing.JTextField jImageBorderColorPicker;
    private javax.swing.JLabel jImageFakeCanvas;
    private javax.swing.JDesktopPane jImageFillsPane;
    private javax.swing.JComboBox<String> jImageFlushPicker;
    private javax.swing.JInternalFrame jImageFrame;
    private javax.swing.JButton jImageGoButton;
    private javax.swing.JLabel jImageHelpText;
    private javax.swing.JLabel jImageOpCount;
    private javax.swing.JComboBox<String> jImageSpeedPicker;
    private javax.swing.JLabel jImageStatus;
    private javax.swing.JTextField jImageTargetColorPicker;
    private javax.swing.JLabel jImageTimeCount;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JInternalFrame jInternalFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JButton jPickImageButton;
    private javax.swing.JDesktopPane jPolyFillsPane;
    private javax.swing.JTextField jPolygonColorPicker;
    private javax.swing.JComboBox<String> jPolygonFlushPicker;
    private javax.swing.JButton jPolygonGoButton;
    private javax.swing.JLabel jPolygonHelpText;
    private javax.swing.JLabel jPolygonOpCount;
    private javax.swing.JComboBox<String> jPolygonSpeedPicker;
    private javax.swing.JLabel jPolygonStatus;
    private javax.swing.JLabel jPolygonTimeCount;
    private javax.swing.JButton jPolygonVertexRemoveButton;
    private javax.swing.JTabbedPane jTabs;
    private javax.swing.JLabel jPolygonFakeCanvas;
    // End of variables declaration//GEN-END:variables
}